{"version":3,"sources":["utility/currencyConversionService.js","utility/ReferenceData.js","converter/CurrencyConverter.js","App.js","reducers/rootReducer.js","index.js"],"names":["refArrForData","refArrForIndex","precisionArr","AUD","CAD","CNY","CZK","DKK","EUR","GPB","JPY","NOK","NZD","USD","rateList","AUDUSD","CADUSD","USDCNY","EURUSD","GBPUSD","NZDUSD","USDJPY","EURCZK","EURDKK","EURNOK","getRate","refTableValue","from","to","interM","fromIndex","indexOf","toIndex","interMIndex","refTableValue1","refTableValue2","convertCurrency","amount","toFixed","isRateAvaialable","currencyCode","toUpperCase","CurrencyConverter","currencyPattern","RegExp","dispatch","useDispatch","error","useSelector","state","useState","fromCurrency","setFromCurrency","toCurrency","setToCurrency","setAmount","convertedAmount","setConvertedAmount","resetInput","resetInfo","type","className","id","onChange","event","target","value","maxLength","placeholder","title","onClick","test","payLoad","App","initialState","rootReducer","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afe0f329.chunk.js","sourcesContent":["import ReferenceData from './ReferenceData';\r\n\r\nconst { refArrForData, refArrForIndex, precisionArr, rateList } = ReferenceData;\r\nconst getRate = (refTableValue, from, to) => {\r\n    switch (refTableValue) {\r\n        case 'USD':\r\n        case 'EUR':\r\n            const interM = refTableValue;\r\n            const fromIndex = refArrForIndex.indexOf(from);\r\n            const toIndex = refArrForIndex.indexOf(to);\r\n            const interMIndex = refArrForIndex.indexOf(interM);\r\n            const refTableValue1 = refArrForData[fromIndex][interMIndex];\r\n            const refTableValue2 = refArrForData[interMIndex][toIndex];\r\n            return (\r\n                getRate(refTableValue1, from, interM) *\r\n                getRate(refTableValue2, interM, to)\r\n            );\r\n        case 'D':\r\n            return rateList[from + to];\r\n        case 'Inv':\r\n            return 1 / rateList[to + from];\r\n        case '1:1':\r\n            return 1;\r\n        default:\r\n            return 1;\r\n    }\r\n};\r\n\r\nexport function convertCurrency (from, to, amount) {\r\n    const fromIndex = refArrForIndex.indexOf(from);\r\n    const toIndex = refArrForIndex.indexOf(to);\r\n    const refTableValue = refArrForData[fromIndex][toIndex];\r\n\r\n    let rate = getRate(refTableValue, from, to);\r\n    let value = amount * rate;\r\n\r\n    return value.toFixed(precisionArr[to]);\r\n};\r\n\r\nexport function isRateAvaialable(currencyCode) {\r\n    return refArrForIndex.indexOf(currencyCode.toUpperCase()) !== -1;\r\n};","const refArrForIndex = [\r\n    'AUD',\r\n    'CAD',\r\n    'CNY',\r\n    'CZK',\r\n    'DKK',\r\n    'EUR',\r\n    'GPB',\r\n    'JPY',\r\n    'NOK',\r\n    'NZD',\r\n    'USD'\r\n];\r\nconst precisionArr = {\r\n    AUD: 2,\r\n    CAD: 2,\r\n    CNY: 2,\r\n    CZK: 2,\r\n    DKK: 2,\r\n    EUR: 2,\r\n    GPB: 2,\r\n    JPY: 0,\r\n    NOK: 2,\r\n    NZD: 2,\r\n    USD: 2\r\n};\r\nconst rateList = {\r\n    AUDUSD: '0.8371',\r\n    CADUSD: '0.8711',\r\n    USDCNY: '6.1715',\r\n    EURUSD: '1.2315',\r\n    GBPUSD: '1.5683',\r\n    NZDUSD: '0.7750',\r\n    USDJPY: '119.95',\r\n    EURCZK: '27.6028',\r\n    EURDKK: '7.4405',\r\n    EURNOK: '8.6651'\r\n};\r\nconst refArrForData = [\r\n    ['1:1', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'D'],\r\n    ['USD', '1:1', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'D'],\r\n    ['USD', 'USD', '1:1', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'D'],\r\n    [\r\n        'USD',\r\n        'USD',\r\n        'USD',\r\n        '1:1',\r\n        'EUR',\r\n        'Inv',\r\n        'USD',\r\n        'USD',\r\n        'EUR',\r\n        'USD',\r\n        'EUR'\r\n    ],\r\n    [\r\n        'USD',\r\n        'USD',\r\n        'USD',\r\n        'EUR',\r\n        '1:1',\r\n        'Inv',\r\n        'USD',\r\n        'USD',\r\n        'EUR',\r\n        'USD',\r\n        'EUR'\r\n    ],\r\n    ['USD', 'USD', 'USD', 'D', 'D', '1:1', 'USD', 'USD', 'D', 'USD', 'D'],\r\n    ['USD', 'USD', 'USD', 'USD', 'USD', 'USD', '1:1', 'USD', 'USD', 'USD', 'D'],\r\n    [\r\n        'USD',\r\n        'USD',\r\n        'USD',\r\n        'USD',\r\n        'USD',\r\n        'USD',\r\n        'USD',\r\n        '1:1',\r\n        'USD',\r\n        'USD',\r\n        'Inv'\r\n    ],\r\n    [\r\n        'USD',\r\n        'USD',\r\n        'USD',\r\n        'EUR',\r\n        'EUR',\r\n        'Inv',\r\n        'USD',\r\n        'USD',\r\n        '1:1',\r\n        'USD',\r\n        'EUR'\r\n    ],\r\n    ['USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', 'USD', '1:1', 'D'],\r\n    ['Inv', 'Inv', 'Inv', 'EUR', 'EUR', 'Inv', 'Inv', 'D', 'EUR', 'Inv', '1:1']\r\n];\r\n\r\n\r\nexport default {\r\n    refArrForData,\r\n    refArrForIndex,\r\n    precisionArr,\r\n    rateList\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport '../App.css';\r\nimport './CurrencyConverter.css';\r\nimport { convertCurrency, isRateAvaialable } from '../utility/currencyConversionService';\r\n\r\nexport default function CurrencyConverter() {\r\n    const currencyPattern = new RegExp(\"^[A-Z,a-z]{3}$\");\r\n\r\n    const dispatch = useDispatch();\r\n    const error = useSelector(state => state.error);\r\n\r\n    const [fromCurrency, setFromCurrency] = useState('');\r\n    const [toCurrency, setToCurrency] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n    const [convertedAmount, setConvertedAmount] = useState('');\r\n\r\n    const updateFromCurrency = event => setFromCurrency(event.target.value);\r\n    const updateToCurrency = event => setToCurrency(event.target.value);\r\n    const updateAmount = event => setAmount(event.target.value);\r\n\r\n    const reset = () => {\r\n        resetInput();\r\n        resetInfo();\r\n    }\r\n\r\n    const resetInput = () => {\r\n        setFromCurrency('');\r\n        setToCurrency('');\r\n        setAmount('');        \r\n    };\r\n\r\n    const resetInfo = () => {\r\n        setConvertedAmount('');\r\n        dispatch({ type: 'RESET' });\r\n    }\r\n\r\n    const convert = () => {\r\n        resetInfo();\r\n        if (!fromCurrency || !toCurrency || !amount) {\r\n            dispatch({ type: 'MANDATORY_ERROR' });\r\n        } else if (!currencyPattern.test(fromCurrency) || !currencyPattern.test(toCurrency)) {\r\n            dispatch({ type: 'FORMMAT_ERROR' });\r\n        } else if (!isRateAvaialable(fromCurrency) || !isRateAvaialable(toCurrency)) {\r\n            dispatch({ type: 'RATE_ERROR', payLoad: { fromCurrency, toCurrency } });\r\n        } else {\r\n            setConvertedAmount(convertCurrency(fromCurrency.toUpperCase(), toCurrency.toUpperCase(), amount));\r\n        }        \r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <section className=\"App-header\">\r\n\r\n                <div className=\"roundCorner\">\r\n                    <div className=\"header\">\r\n                        Currency Converter\r\n                  </div>\r\n                    <div className=\"inputContainer\">\r\n                        <div className=\"inputRow\">\r\n                            <div className=\"label\">From :</div>\r\n                            <div className=\"inputAction\"><input type=\"text\" id=\"fromCurrency\" onChange={updateFromCurrency} value={fromCurrency} maxLength=\"3\" placeholder=\"eg. USD\" title=\"Three letter currency code\" /></div>\r\n                            <div className=\"label\">To :</div>\r\n                            <div className=\"inputAction\"><input type=\"text\" id=\"toCurrency\" onChange={updateToCurrency} value={toCurrency} maxLength=\"3\" placeholder=\"eg. AUD\" title=\"Three letter currency code\" /></div>                            \r\n                      </div>\r\n                        <div className=\"inputRow\">\r\n                            <div className=\"label\">Amount</div>\r\n                            <div className=\"inputAction\"><input type=\"number\" id=\"amount\" onChange={updateAmount} value={amount} placeholder=\"eg. 100.00\" title=\"Amount to be converted\" /></div>\r\n                            <div className=\"buttonContainer\"><button className=\"button\" onClick={convert}>Convert</button></div>\r\n                            <div className=\"buttonContainer\"><button className=\"button\" onClick={reset}>Reset</button></div>\r\n                      </div>\r\n                  </div>\r\n                    {convertedAmount &&\r\n                        <div className=\"result\">\r\n                            Converted Amount : {convertedAmount}\r\n                        </div>\r\n                    }\r\n                    {error &&\r\n                        <div className=\"error\">\r\n                            {error}\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n","import './App.css';\nimport CurrencyConverter from './converter/CurrencyConverter';\n\nfunction App() {\n  return (\n      <div className=\"App\">\n          <CurrencyConverter />\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n    error: ''\r\n};\r\n\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case 'FORMMAT_ERROR':\r\n            return { error: 'Invalid Currency Code Entered !!' };\r\n        case 'MANDATORY_ERROR':\r\n            return { error: 'Kindly provide values for all fields!!' };\r\n        case 'RATE_ERROR':\r\n            return { error: `Rate not avaialabe for ${action.payLoad.fromCurrency.toUpperCase()}${action.payLoad.toCurrency.toUpperCase()} !!` };\r\n        case 'RESET':\r\n            return { error: '' };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer);\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}